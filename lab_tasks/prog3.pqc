#include <stdio.h>
#include <stdlib.h>
#include "test.h"
 
EXEC SQL BEGIN DECLARE SECTION;
    char db[15];
    char usr[15];
    char pas[15];
    char dbname[1024];
    int id;
    char fname[20];
    char lname[20];
EXEC SQL END DECLARE SECTION;

void write_to_json_file(char *json_string, char *filename) {
    FILE *file = fopen(filename, "w");
    if (file == NULL) {
        printf("Could not open file %s\n", filename);
        return;
    }
    fprintf(file, "%s", json_string);
    fclose(file);
}
 
int main() {
    strncpy(db,dbase,15);
    strncpy(usr,user,15);
    strncpy(pas,pass,15);
     //ECPGdebug(1,stderr);  
    EXEC SQL CONNECT TO :db AS con1  USER :usr USING :pas;
 
    EXEC SQL SELECT current_database() INTO :dbname;
    printf("current database=%s \n", dbname);
 
    EXEC SQL DECLARE c1 CURSOR FOR SELECT * FROM kurs.uczestnik;
 
    EXEC SQL OPEN c1;
    char *json_string = malloc(1024*1024);
    json_string[0] = '[';
    while(1){
        EXEC SQL FETCH c1 INTO :id, :fname, :lname;
        if( SQLCODE != 0) {
            break;
        }
        printf("%i  %s  %s\n",id,fname,lname);
        char record[1024];
        sprintf(record, "{\"id\":%i,\"fname\":\"%s\",\"lname\":\"%s\"}\n", id, fname, lname);
        strcat(json_string, record);
    }
    strcat(json_string, "]");

    write_to_json_file(json_string, "uczestnik.json");
    EXEC SQL CLOSE c1;
 
    EXEC SQL DISCONNECT ALL;
    free (json_string);
    return 0;
}